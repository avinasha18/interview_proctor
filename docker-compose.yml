version: '3.8'

services:
  # Python ML Service
  ml-service:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - BACKEND_URL=http://server:3001
    volumes:
      - ./app:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Node.js Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://mongo:27017/exam-proctor
      - CLIENT_URL=http://localhost:5173
      - ML_SERVICE_URL=http://ml-service:8000
    depends_on:
      - mongo
      - ml-service
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: unless-stopped

  # MongoDB Database
  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=exam-proctor
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  # React Client (for development)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_BACKEND_URL=http://localhost:3001
    volumes:
      - ./client:/app
      - /app/node_modules
    restart: unless-stopped
    depends_on:
      - server

volumes:
  mongo_data: